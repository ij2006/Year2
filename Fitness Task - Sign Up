
def go_to_dashboard():
    # Show dashboard window and hide the linked windows
    dashboard_window.show()
    premium_fitness_window.hide()
    premium_health_window.hide()
    subscribe_window.hide()
    free_fitness_window.hide()
    free_health_window.hide()
    sign_up_window.hide()



def create_account_routine():
    # Validation for creating a new account
    # Presence checks
    if sign_up_first_name_input.value == '':
        info('Error', 'Enter your first name')  # If user has not made an entry an error message occurs
    elif sign_up_surname_input.value == '':
        info('Error', 'Enter your surname')  # If user has not made an entry an error message occurs
    elif sign_up_email_input.value == '':
        info('Error', 'Enter your email') # If user has not made an entry an error message occurs
    elif sign_up_username_input.value == '':
        info('Error', 'Enter a username') # If user has not made an entry an error message occurs
    elif sign_up_password_input.value == '':
        info('Error','Password is blank') # If user has not made an entry an error message occurs
    elif sign_up_reenter_password_input.value == '':
        info('Error','Second password is blank') # If user has not made an entry an error message occurs
    # Length checks
    elif len(sign_up_first_name_input.value) < 2 or len(sign_up_first_name_input.value) > 20:
        info('Error', 'First name must be between 2 and 20 characters')
    elif len(sign_up_surname_input.value) < 2 or len(sign_up_surname_input.value) > 20:
        info('Error', 'Surname must be between 2 and 20 characters')
    elif len(sign_up_username_input.value) < 2 or len(sign_up_username_input.value) > 10:
        info('Error', 'Username must be between 2 and 10 characters')
    # Format check
    elif '@' not in sign_up_email_input.value or '.' not in sign_up_email_input.value:
        # Format check for email validation
        info('Error', "Email must contain '@' and '.'")
    else:
        strongpw = check_password_strength(sign_up_password_input.value, sign_up_reenter_password_input.value)
        if strongpw == True:
            # Now hash password for storing securely
            hash_pw = hashlib.sha512(sign_up_password_input.value.encode('utf8')).hexdigest()
            print('New acount',hash_pw)
            # Create new user for a free account
            global glb_user_logged_in
            mysql = ("INSERT INTO User_Table(username, user_password, user_first_name, user_surname, user_email, user_premium_status) VALUES ('"+ str(sign_up_username_input.value) + "','" + str(hash_pw) + "','" + str(sign_up_first_name_input.value) + "','" + str(sign_up_surname_input.value) + "','" + str(sign_up_email_input.value) + "','" + 'False' + "')")
            glb_user_logged_in = execute_sql(database_file, mysql)
            info('Success','Account created')
            go_to_dashboard()

###############
# # Sign up # #
###############
disclaimer_message = 'DISCLAIMER: \nYour username will be public.\n DO NOT include any \npersonal information such as:\n name, age, location.'
# Create window + box 
sign_up_window = Window(app, title = 'Sign up', height = 350, width = 650) # Creeate sign up window
sign_up_box = Box(sign_up_window, align = 'top', width = 600, height = 'fill', layout = 'grid') # Create box in aign up window
# Fill box 
sign_up_lable = Text(sign_up_box, text = 'Create a new free account', size = 15, grid = [1,0]) # Adds lable to sign up window
sign_up_logo = Picture(sign_up_box, image = 'Toka_Logo.png', grid = [3,0], height = 50, width = 90) # Add logo to sign up window
sign_up_first_name_lable = Text(sign_up_box, text = 'Enter first name:', width = 15, grid = [0,1], align = 'left') 
sign_up_first_name_input = TextBox(sign_up_box, width = 20, grid = [1,1], align = 'left')
sign_up_surname_lable = Text(sign_up_box, text = 'Enter surname:', width = 15, grid = [0,2], align = 'left') 
sign_up_surname_input = TextBox(sign_up_box, width = 20, grid = [1,2], align = 'left')
sign_up_email_lable = Text(sign_up_box, text = 'Enter email:', width = 15, grid = [0,3], align = 'left') 
sign_up_email_input = TextBox(sign_up_box, width = 20, grid = [1,3], align = 'left')
sign_up_username_lable = Text(sign_up_box, text = 'Enter username:', width = 15, grid = [0,4], align = 'left') 
sign_up_username_input = TextBox(sign_up_box, width = 20, grid = [1,4], align = 'left')
sign_up_password_lable = Text(sign_up_box, text = 'Enter password:', width = 15, grid = [0,5], align = 'left') # Where user inputs password + program sanitizes password on input
sign_up_password_input = TextBox(sign_up_box, width = 20, grid = [1,5], hide_text = True, align = 'left')
sign_up_reenter_password_lable = Text(sign_up_box, text = 'ReEnter password:', width = 15, grid = [0,6], align = 'left') # Where user inputs password + program sanitizes password on input
sign_up_reenter_password_input = TextBox(sign_up_box, width = 20, grid = [1,6], hide_text = True, align = 'left')
sign_up_create_account_button = PushButton(sign_up_box, text = 'Create account',grid = [1,8], command = create_account_routine) # Create account button to promt create account routine function
sign_up_back_button = PushButton(sign_up_box, text = 'Back', grid = [2,8], command = go_to_main_menu) # Adds back button into sign up box that runs the back to main menu procedure
sign_up_disclaimer = Text(sign_up_box, text = disclaimer_message, grid = [0,8])
# Improve layout of box
sign_up_blank_row1 = Text(sign_up_box, text = ' ', grid = [0,7]) # Creates space between two rows to improve appearance
sign_up_blank_column1 = Text(sign_up_box, text = ' ', grid = [2,0]) # Creates space between two columns to improve appearance
# Create colour scheme
sign_up_window.bg = light_purple
sign_up_box.bg = 'white'
sign_up_first_name_input.bg = light_purple
sign_up_surname_input.bg = light_purple
sign_up_email_input.bg = light_purple
sign_up_username_input.bg = light_purple
sign_up_password_input.bg = light_purple
sign_up_reenter_password_input.bg = light_purple
sign_up_create_account_button.bg = light_purple
sign_up_back_button.bg = light_purple
sign_up_disclaimer.text_color = 'red'
# Hide window
sign_up_window.hide()
