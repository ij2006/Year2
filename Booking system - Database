# Create database using DDL sql statements
sql = """
CREATE TABLE "User_Table"(
    "userID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "username" TEXT,
    "user_password" TEXT,
    "user_first_name" TEXT,
    "user_surname" TEXT,
    "user_email" TEXT
);
CREATE TABLE "Booking_Table"(
    "bookingID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "booking_num_people" INTEGER,
    "booking_num_rooms" INTEGER,
    "booking_location" TEXT,
    "booking_start_date" DATE,
    "booking_end_date" DATE,
    "userID" INTEGER,
    "roomID" INTEGER,
    CONSTRAINT "userID" FOREIGN KEY ("userID") REFERENCES "User_Table"("userID")
    CONSTRAINT "roomID" FOREIGN KEY ("roomID") REFERENCES "Room_Table"("roomID")
);
CREATE TABLE "Room_Table"(
    "roomID" INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT,
    "room_type" TEXT,
    "room_cost_per_night" FLOAT,
    "room_location", TEXT
);

insert into User_Table (username, user_password, user_first_name,user_surname, user_email) values ('TestUser', 'TestPass1', 'Test', 'SurTest', 'testuser@email.com');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Double', '68.45', 'London');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Single', '68.45', 'London');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Double', '65.45', 'Portsmouth');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Single', '65.45', 'Portsmouth');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Double', '60.45', 'Havant');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Single', '60.45', 'Havant');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Double', '68.45', 'London');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Single', '68.45', 'London');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Double', '65.45', 'Portsmouth');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Single', '65.45', 'Portsmouth');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Double', '60.45', 'Havant');
insert into Room_Table (room_type, room_cost_per_night, room_location) values ('Single', '60.45', 'Havant');
insert into Booking_Table (booking_num_people, booking_num_rooms, booking_location, booking_start_date, booking_end_date, userID, roomID) values ('2', '1', 'London', '27/10/2023', '30/10/2023', '1', '1');
insert into Booking_Table (booking_num_people, booking_num_rooms, booking_location, booking_start_date, booking_end_date, userID, roomID) values ('4', '2', 'Portsmouth', '2/03/2023', '4/03/2023', '1', '1');
insert into Booking_Table (booking_num_people, booking_num_rooms, booking_location, booking_start_date, booking_end_date, userID, roomID) values ('2', '1', 'Havant', '1/09/2023', '2/09/2023', '1', '1')


"""

# Global variables
database_file = 'Hotel.db' # Global variable creates database name

glb_user_logged_in = 0 # Setting varible to 0 to prevent error until user has logged in or created an account


if os.path.exists(database_file): # Recreates database 
    os.remove(database_file)
#
# Connect to the database
#
conn = sqlite3.connect(database_file)
# Get a cursor pointing to the database
cursor = conn.cursor()
# Create the tables
cursor.executescript(sql)
# Commit to save everything
conn.commit()
# Close the connection to the database
conn.close()
