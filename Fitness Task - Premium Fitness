def go_to_dashboard():
    # Show dashboard window and hide the linked windows
    dashboard_window.show()
    premium_fitness_window.hide()
    premium_health_window.hide()
    subscribe_window.hide()
    free_fitness_window.hide()
    free_health_window.hide()
    sign_up_window.hide()


def save_fitness_journal():
    # Validate the inputted values and save the users jounal into the db once values are validated
    # Create variables for users inputs so that .isnumeric validation can be carried out on them
    journal = premium_fitness_log_journal_entry.value
    weight = premium_fitness_weight_entry.value
    calories = premium_fitness_calorie_entry.value
    if len(journal) < 2:
         # Length check
         info('Error', 'Journal is empty')  # If user has not made an entry an error message occurs
    elif weight == '':
        info('Error', 'Enter weight')  # If user has not made an entry an error message occurs
    elif calories == '':
        info('Error', 'Enter calories burned') # If user has not made an entry an error message occurs
    elif len(journal) > 50:
        info('Error', '50 character limit exceeded on journal') # If the journal is too long then an error message will occur
    elif check_number(weight, 'Weight', 20, 600) == False:
        info('Error', 'Weight must be between 20 and 600 inclusive')
    elif check_number(calories, 'Calories burnt', 1, 1500) == False:
        info('Error', 'Calories burnt must be between 1 and 1500 inclusive')
    else:
        # Create new user
        global glb_user_logged_in
        # Call function to get todays date
        log_date = get_todays_date()
        print(log_date)
        mysql = ("INSERT INTO Fitness_Journal_Table(fitness_journal_date, fitness_journal_entry, fitness_journal_workout, fitness_journal_weight, fitness_journal_calories, userID) VALUES ('"+ str(log_date) + "','" + str(premium_fitness_log_journal_entry.value) + "','" + str(premium_fitness_log_choose_workout_record_combo.value) + "','" + str(premium_fitness_weight_entry.value) + "','" + str(premium_fitness_calorie_entry.value) + "','" + str(glb_user_logged_in) + "')")
        execute_sql(database_file, mysql)
        info('Success','Your journal has been saved')



def display_selected_workout(selected_value):
    # Open website in a new browser for the selected combo value
    if selected_value == 'Full body':
        webbrowser.open_new_tab('https://www.puregym.com/blog/full-body-workout-with-weights/')
    elif selected_value == 'Legs':
        webbrowser.open_new_tab('https://barbend.com/best-leg-exercises/')
    elif selected_value == 'Arms':
        webbrowser.open_new_tab('https://central.gymshark.com/article/the-six-best-arm-exercises')
    elif selected_value == 'Core':
        webbrowser.open_new_tab('https://www.verywellfit.com/quick-core-workout-routine-3120075')
    elif selected_value == 'Cardio':
        webbrowser.open_new_tab('https://www.medicalnewstoday.com/articles/cardio-exercises-at-home')


def save_weight_goal():
    info('info', 'Coming soon...')



##############################
# # Premium fitness window # #
############################## 
# Create window + box
premium_fitness_window = Window(app, title = 'Premium fitness content', height = 620, width = 1200)
premium_fitness_box = Box(premium_fitness_window, align = 'top', width = 1100, height = 'fill', layout = 'grid')
# Main box
premium_fitness_logo = Picture(premium_fitness_box, image = 'Toka_Logo.png', grid = [3,0], align = 'right', height = 50, width = 90) # Add premiuim fitness content window
premium_fitness_icon = Picture(premium_fitness_box, image = 'Fitness_icon.png', grid = [2,0], height = 50, width = 50, align = 'left') # Add premiuim fitness content window
premium_fitness_title = Text(premium_fitness_box, text = 'Fitness advice & tracking', grid = [1,0], size = 20, align = 'right') # Adds lable to premiuim fitness content window
premium_fitness_back_button = PushButton(premium_fitness_box, text = 'Back', grid = [3,5], width = 15, height = 2, align = 'right', command = go_to_dashboard) # Adds back button into dashboard box that runs the back to main menu procedure
# Exercise log box
premium_fitness_log_box =  Box(premium_fitness_box, grid = [1,3], align = 'top', width = 300, height = 700, layout = 'grid', border = True)
premium_fitness_log_title = Text(premium_fitness_log_box, text = 'Add Fitness Journal entry', grid = [1,1], size = 15) # Adds title to premiuim fitness content box
premium_fitness_log_lable = Text(premium_fitness_log_box, text = 'Select workout:', grid = [1,3], align = 'left') # Adds lable to premiuim fitness content box
premium_fitness_log_choose_workout_record_combo = Combo(premium_fitness_log_box, options = ['Full body', 'Legs', 'Arms', 'Core', 'Cardio'], grid = [2,3], align = 'left')
premium_fitness_log_journal_lable = Text(premium_fitness_log_box, text = 'Journal entry:', grid = [1,5], align = 'left')
premium_fitness_log_journal_entry = TextBox(premium_fitness_log_box, multiline = True, height = 5, width = 15, scrollbar = True, grid = [2,5], align = 'left')
premium_fitness_calorie_loss = Text(premium_fitness_log_box, text = 'Log todays calorie loss:', grid = [1,7], align = 'left')
premium_fitness_calorie_entry = TextBox(premium_fitness_log_box, grid = [2,7], align = 'left')
premium_fitness_weight = Text(premium_fitness_log_box, text = 'Enter todays weight:', grid = [1,9], align = 'left')
premium_fitness_weight_entry = TextBox(premium_fitness_log_box, grid = [2,9], align = 'left')
premium_fitness_log_save_button = PushButton(premium_fitness_log_box, text = 'Save', grid = [3,11], command = save_fitness_journal)
# Right hand box
premium_fitness_right_box = Box(premium_fitness_box, grid = [3,3], align = 'top', width = 300, height = 700, layout = 'grid', border = True)
premium_fitness_right_title = Text(premium_fitness_right_box, text = 'Compare progress' , grid = [1,1], size = 15)
premium_fitness_goal_weight = Text(premium_fitness_right_box, text = goal_weight_message, grid = [3,2], align = 'bottom')
premium_fitness_weight_loss_history = PushButton(premium_fitness_right_box, text = 'Weight loss history', grid = [1,3], command = plot_weight)
premium_fitness_weight_calorie_leaderboard = PushButton(premium_fitness_right_box, text = 'Calorie leaderboard', grid = [2,3], command = premium_pie_chart)
premium_fitness_choose_workout_text = Text(premium_fitness_right_box, text = 'Choose workout:', grid = [1,5], align = 'left')
premium_fitness_choose_workout_combo = Combo(premium_fitness_right_box, options = ['Full body', 'Legs', 'Arms', 'Core', 'Cardio'], grid = [2,5], align = 'left', command = display_selected_workout)
premium_fitness_change_weight_goal = Text(premium_fitness_right_box, text = 'Change weight goal:', grid = [1,7], align = 'left')
premium_fitness_change_weight_goal_entry = TextBox(premium_fitness_right_box, grid = [2,7], align = 'left')
premium_fitness_change_weight_goal_save = PushButton(premium_fitness_right_box, text = 'Save new weight goal', grid = [2,9], command = save_weight_goal)
# Improve layout of window
# Main window
premium_fitness_blank_column1 = Text(premium_fitness_box, text = ' ', grid = [0,0], width = 4) # Creates space between two columns to improve appearance
premium_fitness_blank_column2 = Text(premium_fitness_box, text = ' ', grid = [4,0], width = 10) # Creates space between two columns to improve appearance
#premium_fitness_blank_column3 = Text(premium_fitness_box, text = ' ', grid = [2,0], width = 4) # Creates space between two columns to improve appearance
premium_fitness_blank_row1 = Text(premium_fitness_box, text = ' ', grid = [0,2], height = 2) # Creates space between two rows to improve appearance
premium_fitness_blank_row2 = Text(premium_fitness_box, text = ' ', grid = [0,4], height = 2) # Creates space between two rows to improve appearance
premium_fitness_blank_row3 = Text(premium_fitness_box, text = ' ', grid = [0,5], height = 2) # Creates space between two rows to improve appearance
# Log box
premium_fitness_log_blank_row1 = Text(premium_fitness_log_box, text = ' ', grid = [0,0], height = 1, width = 1) # Creates space between two rows to improve appearance
premium_fitness_log_blank_row2 = Text(premium_fitness_log_box, text = ' ', grid = [0,2], height = 1, width = 1) # Creates space between two rows to improve appearance
premium_fitness_log_blank_row3 = Text(premium_fitness_log_box, text = ' ', grid = [0,4], height = 1, width = 1) # Creates space between two rows to improve appearance
premium_fitness_log_blank_row4 = Text(premium_fitness_log_box, text = ' ', grid = [0,6], height = 1, width = 1) # Creates space between two rows to improve appearance
premium_fitness_log_blank_row5 = Text(premium_fitness_log_box, text = ' ', grid = [0,8], height = 1, width = 1) # Creates space between two rows to improve appearance
premium_fitness_log_blank_row6 = Text(premium_fitness_log_box, text = ' ', grid = [0,10], height = 1, width = 1) # Creates space between two rows to improve appearance
premium_fitness_log_blank_column1 = Text(premium_fitness_log_box, text = ' ', grid = [4,12], width = 1, height = 1) # Creates space between two columns to improve appearance
# Right box
premium_fitness_right_blank_row1 = Text(premium_fitness_right_box, text = ' ', grid = [0,0], height = 1, width = 1) # Creates space between two rows to improve appearance
premium_fitness_right_blank_row2 = Text(premium_fitness_right_box, text = ' ', grid = [0,4], width = 1, height = 1) # Creates space between two rows to improve appearance
premium_fitness_right_blank_row3 = Text(premium_fitness_right_box, text = ' ', grid = [0,6], width = 1, height = 1) # Creates space between two rows to improve appearance
premium_fitness_right_blank_row4 = Text(premium_fitness_right_box, text = ' ', grid = [0,8], width = 1, height = 1) # Creates space between two rows to improve appearance
premium_fitness_right_blank_row5 = Text(premium_fitness_right_box, text = ' ', grid = [4,10], width = 1, height = 1) # Creates space between two rows to improve appearance
# Create colour scheme
# Main box
premium_fitness_title.text_color = pink
premium_fitness_window.bg = light_purple
premium_fitness_box.bg = 'white'
premium_fitness_back_button.bg = pink
# Log box
premium_fitness_log_title.text_color = light_purple
premium_fitness_log_lable.text_color = light_purple
premium_fitness_log_choose_workout_record_combo.bg = light_purple
premium_fitness_log_journal_lable.text_color = light_purple
premium_fitness_log_save_button.bg = light_purple
premium_fitness_calorie_loss.text_color = light_purple
premium_fitness_weight.text_color = light_purple
# Right box
premium_fitness_right_title.text_color = pink
premium_fitness_weight_loss_history.bg = light_blue
premium_fitness_weight_calorie_leaderboard.bg = light_blue
premium_fitness_choose_workout_text.text_color = pink
premium_fitness_choose_workout_combo.bg = light_blue
premium_fitness_goal_weight.text_color = pink 
premium_fitness_change_weight_goal.text_color = pink
premium_fitness_change_weight_goal_save.bg = light_blue
# Hide window
premium_fitness_window.hide()
