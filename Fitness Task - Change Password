def change_password_procedure():
    # Changes users account password depending on username entered
    # Presence checks
    if change_password_username_input.value == '':
        info('Error', 'Enter your username') # If user has not made an entry an error message occurs
    elif change_password_password_input.value == '':
        info('Error', 'Enter your password') # If user has not made an entry an error message occurs
    elif change_password_reenter_password_input.value == '':
        info('Error', 'Re enter your password') # If user has not made an entry an error message occurs
    else:
        # Strength check reused function
        strongpw = check_password_strength(change_password_password_input.value, change_password_reenter_password_input.value)
        if strongpw == True:
            sqlselect = "SELECT * FROM User_Table WHERE Username = '"+change_password_username_input.value+"'" # Locate the information stored in the database related to the username inputted
            rows = query_database(database_file, sqlselect) # Runs sql query procedure
            if len(rows) == 0: ### This checks that the user was found ###
                info("Error","User does not exist") # Error message if the entered details are not found in the databse
            else:
                # Now hash password for storing securely
                hash_pw = hashlib.sha512(change_password_password_input.value.encode('utf8')).hexdigest()
                print('Password change',hash_pw)
                global glb_user_logged_in
                mysql = ("UPDATE User_Table SET user_password = '"+ str(hash_pw) +"' WHERE Username = '"+change_password_username_input.value+"' ") # Changes users password to new user
                glb_user_logged_in = execute_sql(database_file, mysql) # Executes SQL
                info('Success','Password changed')
                go_to_login_window()


def go_to_login_window():
    # Clear textboxes to improve data privacy and comply with GDPR
    login_username_input.clear()
    login_password_input.clear()
    # Show login window and hide the linked windows
    if main_menu_cookies_tick.value == False: # If user has not given cookie consent hey cannot go to login
        info('Cookies', 'Please consent to cookies')
    elif main_menu_TC_tick.value == False: # If user has not agreed to terms and conditions they cannot go to  login
        info('Ts & Cs','Please agree to Terms and Conditions')
    else:
        # Clear login inputs for data protection
        login_username_input.clear() # Sets the username input textbox value to nothing
        login_password_input.clear()
        # Displays login window to user
        main_menu_window.hide()
        login_window.show()
        change_password_window.hide()
        dashboard_window.hide()



##############################
# # Change password window # #
##############################
# Create window + box
change_password_window = Window(app, title = 'Change password', height = 250, width = 500) # Creeate change password window
change_password_box = Box(change_password_window, align = 'top', width = 450, height = 'fill', layout = 'grid') # Create box in change password window
# Fill box
change_password_lable = Text(change_password_box, text = 'Update Password', grid = [1,0]) # Adds lable to change password window
change_password_logo = Picture(change_password_box, image = 'Toka_Logo.png', grid = [3,0], height = 50, width = 90) # Add logo to change password window
change_password_username_lable = Text(change_password_box, text = 'Enter username:', width = 15, grid = [0,1]) 
change_password_username_input = TextBox(change_password_box, width = 20, grid = [1,1])
change_password_password_lable = Text(change_password_box, text = 'Enter new password:', grid = [0,2]) # Where user inputs password + program sanitizes password on input
change_password_password_input = TextBox(change_password_box, width = 20, grid = [1,2], hide_text = True)
change_password_reenter_password_lable = Text(change_password_box, text = 'Re enter new password:', grid = [0,3]) # Where user inputs password + program sanitizes password on input
change_password_reenter_password_input = TextBox(change_password_box, width = 20, grid = [1,3], hide_text = True)
change_password_login_button = PushButton(change_password_box, text = 'Change password',grid = [1,4], command = change_password_procedure)
change_password_back_button = PushButton(change_password_box, text = 'Back', grid = [3,5], command = go_to_login_window)
# Imporve layout of window
change_password_blank_column1 = Text(change_password_box, text = ' ', grid = [2,0]) # Creates space between two columns to improve appearance
# Create colour scheme
change_password_window.bg = light_purple
change_password_box.bg = 'white'
change_password_login_button.bg = light_purple
change_password_back_button.bg = light_purple
# Hide window
change_password_window.hide()
