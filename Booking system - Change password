def change_password_procedure():
    # Changes users account password depending on username entered
    if change_password_username_input.value == '':
        info('Error', 'Enter your username') # If user has not made an entry an error message occurs
    elif change_password_password_input.value == '':
        info('Error', 'Enter your password') # If user has not made an entry an error message occurs
    elif change_password_reenter_password_input.value == '':
        info('Error', 'Re enter your password') # If user has not made an entry an error message occurs
    elif change_password_password_input.value != change_password_reenter_password_input.value:
        info('Error', 'Passwords must match') # If user has not entered matching passwords an error will inform them
    elif len(change_password_password_input.value) < 8:
        info('Error', 'Password must be at least 8 characters long') # Informs user their password must be 8 characters long if they have not entered 8 characters
    else:
        sqlselect = "SELECT * FROM User_Table WHERE Username = '"+change_password_username_input.value+"'" # Locate the information stored in the database related to the username inputted
        rows = query_database(database_file, sqlselect) # Runs sql query procedure
        if len(rows) == 0: ### This checks that the user was found ###
            info("Error","User does not exist") # Error message if the entered details are not found in the databse
        else:
            global glb_user_logged_in
            mysql3 = ("UPDATE User_Table SET user_password = '"+ str(change_password_password_input.value) +"' WHERE Username = '"+change_password_username_input.value+"' ") # Changes users password to new user
            glb_user_logged_in = execute_sql(database_file, mysql3) # Executes SQL
            info('Success','Password changed')
            back_to_login_window()

# Change password window
change_password_window = Window(app, title = 'Change password page', height = 250, width = 420) # Creeate change password window
change_password_box = Box(change_password_window, align = 'top', width = 'fill', height = 'fill', layout = 'grid') # Create box in change password window
change_password_lable = Text(change_password_box, text = 'Change Password', grid = [1,0]) # Adds lable to change password window
change_password_blank_column1 = Text(change_password_box, text = ' ', grid = [2,0]) # Creates space between two columns to improve appearance
change_password_logo = Picture(change_password_box, image = 'hotel_logo.png', grid = [3,0], height = 50, width = 70) # Add logo to change password window
change_password_username_lable = Text(change_password_box, text = 'Enter username:', width = 15, grid = [0,1]) 
change_password_username_input = TextBox(change_password_box, width = 20, grid = [1,1])
change_password_password_lable = Text(change_password_box, text = 'Enter new password:', grid = [0,2]) # Where user inputs password + program sanitizes password on input
change_password_password_input = TextBox(change_password_box, width = 20, grid = [1,2], hide_text = True)
change_password_reenter_password_lable = Text(change_password_box, text = 'Re enter new password:', grid = [0,3]) # Where user inputs password + program sanitizes password on input
change_password_reenter_password_input = TextBox(change_password_box, width = 20, grid = [1,3], hide_text = True)
change_password_login_button = PushButton(change_password_box, text = 'Change password',grid = [1,4], command = change_password_procedure)
change_password_back_button = PushButton(change_password_box, text = 'Back', grid = [3,5], command = back_to_login_window)

change_password_window.hide()
